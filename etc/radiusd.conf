
prefix = /usr
exec_prefix = /usr
sysconfdir = /etc
localstatedir = /var
sbindir = /usr/sbin
logdir = ${localstatedir}/log/radius
raddbdir = ${sysconfdir}/raddb
radacctdir = ${logdir}/radacct

#
#  name of the running server.  See also the "-n" command-line option.
name = radiusd

#  Location of config and logfiles.
confdir = ${raddbdir}
modconfdir = ${confdir}/mods-config
certdir = ${confdir}/certs
cadir   = ${confdir}/certs
run_dir = ${localstatedir}/run/${name}

db_dir = ${localstatedir}/lib/radiusd

libdir = /usr/lib64/freeradius
pidfile = ${run_dir}/${name}.pid

max_request_time = 30
cleanup_delay = 5
max_requests = 1024
hostname_lookups = no


security {
	user = radiusd
	group = radiusd
	allow_core_dumps = no
	max_attributes = 200
	reject_delay = 1
	status_server = yes
}

thread pool {
	start_servers = 3
	max_servers = 32
	min_spare_servers = 3
	max_spare_servers = 10
	max_requests_per_server = 0
	auto_limit_acct = no
}

client bras {
	ipaddr = <bras-ip-address>
	secret = <bras-secret>
}

modules {
	sql {
		driver = "rlm_sql_postgresql"
		server = <postgresql-server-ip>
		radius_db = "port=5432 dbname=billing user=network password=<network-user-password>"

		sql_user_name = "%{User-Name}"
		authorize_check_query = "SELECT id, username, attribute, value, op FROM rad_check('%{SQL-User-Name}', '%{Agent-Remote-Id}', '%{Agent-Circuit-Id}');"
		authorize_reply_query = "SELECT id, username, attribute, value, op FROM rad_reply('%{SQL-User-Name}', '%{Agent-Remote-Id}', '%{Agent-Circuit-Id}');"

		accounting {
			query = "SELECT rad_acct('%{Acct-Status-Type}', '%{NAS-IP-Address}', '%{Acct-Session-Id}', '%{Class}', '%{SQL-User-Name}');"
		}
	}

	pap {
	}
	chap {
	}
	mschap {
	}
}

server default {
	listen {
		type = auth
		ipaddr = *
		port = 0
	}

	listen {
		type = acct
		ipaddr = *
		port = 0
	}

	authorize {
		chap
		mschap

		sql

		pap
	}

	authenticate {
		Auth-Type PAP {
			pap
		}

		Auth-Type CHAP {
			chap
		}

		Auth-Type MSCHAP {
			mschap
		}
	}

	accounting {
		sql
	}
}
